fragment_downloaded_cb({"fragment": "Portability improvements to Boost Dependency \nCan index CustomTarget objects \nCan override executables in the cross file \nEasier handling of supported compiler arguments \nThe Boost dependency has been improved to better detect the various ways to install boost on multiple platforms. At the same time the modules semantics for the dependency has been changed. Previously it was allowed to specify header directories as modules but it wasn t required. Now modules are only used to specify libraries that require linking. \nThis is a breaking change and the fix is to remove all modules that aren t found. \nThe CustomTarget object can now be indexed like an array. The resulting object can be used as a source file for other Targets this will create a dependency on the original CustomTarget but will only insert the generated file corresponding to the index value of the CustomTarget s output keyword. \nThe cross file can now be used for overriding the result of find_program. As an example if you want to find the objdump command and have the following definition in your cross file \nThen issuing the command find_program objdump will return the version specified in the cross file. If you need the build machine s objdump you can specify the native keyword like this \nmeson native_objdump find_program objdump native true \nA common pattern for handling multiple desired compiler arguments was to test their presence and add them to an array one by one e.g. \nA helper has been added for the foreach has_argument pattern so you can now simply do \nThen you can use the dependency object in the same way as any other. \n", "url": "Release-notes-for-0-43-0.html#page-description"});