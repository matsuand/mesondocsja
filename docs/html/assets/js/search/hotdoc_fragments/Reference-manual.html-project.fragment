fragment_downloaded_cb({"url": "Reference-manual.html#project", "fragment": "project \nThe first argument to this function must be a string defining the name of this project. It is followed by programming languages that the project uses. Supported values for languages are c cpp for C d objc objcpp fortran java cs for C and vala. In versions before you must have at least one language listed. \nThe project name can be any string you want it s not used for anything except descriptive purposes. However since it is written to e.g. the dependency manifest is usually makes sense to have it be the same as the project tarball or pkg config name. So for example you would probably want to use the name libfoobar instead of The Foobar Library. \nProject supports the following keyword arguments. \nlicense takes a string or array of strings describing the license s the code is under. Usually this would be something like license GPL2 but if the code has multiple licenses you can specify them as an array like this license proprietary GPL3 Note that the text is informal and is only written to the dependency manifest. Meson does not do any license validation you are responsible for verifying that you abide by all licensing terms. \nmeson_version takes a string describing which Meson version the project requires. Usually something like \nsubproject_dir specifies the top level directory name that holds Meson subprojects. This is only meant as a compatibility option for existing code bases that house their embedded source code in a custom directory. All new projects should not set this but instead use the default value. It should be noted that this keyword argument is ignored inside subprojects. There can be only one subproject dir and it is set in the top level Meson file. \nversion which is a free form string describing the version of this project. You can access the value in your Meson build files with meson.project_version \n"});