fragment_downloaded_cb({"url": "Subprojects.html#page-description", "fragment": "Some platforms do not provide a native packaging system. In these cases it is common to bundle all third party libraries in your source tree. This is usually frowned upon because it makes it hard to add these kinds of projects into e.g. those Linux distributions that forbid bundled libraries. \nMeson tries to solve this problem by making it extremely easy to provide both at the same time. The way this is done is that Meson allows you to take any other Meson project and make it a part of your build without in the best case any changes to its Meson setup. It becomes a transparent part of the project. The basic idiom goes something like this. \nAs an example suppose we have a simple project that provides a shared library. It would be set up like this. \nThen we could use that from a master project. First we generate a subdirectory called subprojects in the root of the master directory. Then we create a subdirectory called simple and put the subproject in that directory. Now the subproject can be used like this. \nWith this setup the system dependency is used when it is available otherwise we fall back on the bundled version. If you wish to always use the embedded version then you would declare it like this \n"});