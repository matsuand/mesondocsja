# Japanese translations for PACKAGE package
# Copyright (C) 2017 Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# Automatically generated, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2017-10-24 18:52+0900\n"
"PO-Revision-Date: 2017-09-30 21:44+0900\n"
"Last-Translator: Automatically generated\n"
"Language-Team: matsuand個人翻訳\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Plain text
#: Release-notes-for-0.43.0.md:1
#, no-wrap
msgid "---\n"
msgstr ""

#. type: Plain text
#: Release-notes-for-0.43.0.md:5
msgid ""
"title: Release 0.43 short-description: Release notes for 0.43 "
"(preliminary)  ..."
msgstr ""
"title: Release 0.43\n"
"short-description: Release notes for 0.43 (preliminary) \n"
"..."

#. type: Plain text
#: Release-notes-for-0.43.0.md:7
msgid "# Portability improvements to Boost Dependency"
msgstr ""

#. type: Plain text
#: Release-notes-for-0.43.0.md:13
msgid ""
"The Boost dependency has been improved to better detect the various ways to "
"install boost on multiple platforms. At the same time the `modules` "
"semantics for the dependency has been changed. Previously it was allowed to "
"specify header directories as `modules` but it wasn't required. Now, modules "
"are only used to specify libraries that require linking."
msgstr ""

#. type: Plain text
#: Release-notes-for-0.43.0.md:16
msgid ""
"This is a breaking change and the fix is to remove all modules that aren't "
"found."
msgstr ""

#. type: Plain text
#: Release-notes-for-0.43.0.md:18
msgid "# Generator learned capture"
msgstr ""

#. type: Plain text
#: Release-notes-for-0.43.0.md:21
msgid ""
"Generators can now be configured to capture the standard output. See `test "
"cases/common/98 gen extra/meson.build` for an example."
msgstr ""

#. type: Plain text
#: Release-notes-for-0.43.0.md:23
msgid "# Can index CustomTarget objects"
msgstr ""

#. type: Plain text
#: Release-notes-for-0.43.0.md:28
msgid ""
"The `CustomTarget` object can now be indexed like an array. The resulting "
"object can be used as a source file for other Targets, this will create a "
"dependency on the original `CustomTarget`, but will only insert the "
"generated file corresponding to the index value of the `CustomTarget`'s "
"`output` keyword."
msgstr ""

#. type: Plain text
#: Release-notes-for-0.43.0.md:45
#, no-wrap
msgid ""
"```meson\n"
"c = custom_target(\n"
"  ...\n"
"  output : ['out.h', 'out.c'],\n"
")\n"
"lib1 = static_library(\n"
"  'lib1',\n"
"  [lib1_sources, c[0]],\n"
"  ...\n"
")\n"
"exec = executable(\n"
"  'executable',\n"
"  c[1],\n"
"  link_with : lib1,\n"
")\n"
"```\n"
msgstr ""

#. type: Plain text
#: Release-notes-for-0.43.0.md:47
msgid "# Can override executables in the cross file"
msgstr ""

#. type: Plain text
#: Release-notes-for-0.43.0.md:51
msgid ""
"The cross file can now be used for overriding the result of `find_program`. "
"As an example if you want to find the `objdump` command and have the "
"following definition in your cross file:"
msgstr ""

#. type: Plain text
#: Release-notes-for-0.43.0.md:57
msgid ""
"```ini [binaries] ...  objdump = '/usr/bin/arm-linux-gnueabihf-objdump-6' ```"
msgstr ""

#. type: Plain text
#: Release-notes-for-0.43.0.md:61
msgid ""
"Then issuing the command `find_program('objdump')` will return the version "
"specified in the cross file. If you need the build machine's objdump, you "
"can specify the `native` keyword like this:"
msgstr ""

#. type: Plain text
#: Release-notes-for-0.43.0.md:65
msgid "```meson native_objdump = find_program('objdump', native : true)  ```"
msgstr ""

#. type: Plain text
#: Release-notes-for-0.43.0.md:67
msgid "# Easier handling of supported compiler arguments"
msgstr ""

#. type: Plain text
#: Release-notes-for-0.43.0.md:70
msgid ""
"A common pattern for handling multiple desired compiler arguments, was to "
"test their presence and add them to an array one-by-one, e.g.:"
msgstr ""

#. type: Plain text
#: Release-notes-for-0.43.0.md:85
#, no-wrap
msgid ""
"```meson\n"
"warning_flags_maybe = [\n"
"  '-Wsomething',\n"
"  '-Wanother-thing',\n"
"  '-Wno-the-other-thing',\n"
"]\n"
"warning_flags = []\n"
"foreach flag : warning_flags_maybe\n"
"  if cc.has_argument(flag)\n"
"    warning_flags += flag\n"
"  endif\n"
"endforeach\n"
"cc.add_project_argument(warning_flags)\n"
"```\n"
msgstr ""

#. type: Plain text
#: Release-notes-for-0.43.0.md:88
msgid ""
"A helper has been added for the foreach/has_argument pattern, so you can now "
"simply do:"
msgstr ""

#. type: Plain text
#: Release-notes-for-0.43.0.md:93
msgid ""
"```meson warning_flags = [ ... ] flags = cc."
"get_supported_arguments(warning_flags)  ```"
msgstr ""

#. type: Plain text
#: Release-notes-for-0.43.0.md:95
msgid "# Better support for shared libraries in non-system paths"
msgstr ""

#. type: Plain text
#: Release-notes-for-0.43.0.md:101
msgid ""
"Meson has support for prebuilt object files and static libraries.  This "
"release adds feature parity to shared libraries that are either in non-"
"standard system paths or shipped as part of your project. On systems that "
"support rpath, Meson automatically adds rpath entries to built targets using "
"manually found external libraries."
msgstr ""

#. type: Plain text
#: Release-notes-for-0.43.0.md:105
msgid ""
"This means that e.g. supporting prebuilt libraries shipped with your source "
"or provided by subprojects or wrap definitions by writing a build file like "
"this:"
msgstr ""

#. type: Plain text
#: Release-notes-for-0.43.0.md:108
msgid "```meson project('myprebuiltlibrary', 'c')"
msgstr ""

#. type: Plain text
#: Release-notes-for-0.43.0.md:114
#, no-wrap
msgid ""
"cc = meson.get_compiler('c')\n"
"prebuilt = cc.find_library('mylib', dirs : meson.current_source_dir())\n"
"mydep = declare_dependency(include_directories : include_directories('.'),\n"
"                           dependencies : prebuilt)\n"
"```\n"
msgstr ""

#. type: Plain text
#: Release-notes-for-0.43.0.md:116
msgid "Then you can use the dependency object in the same way as any other."
msgstr ""

#. type: Plain text
#: Release-notes-for-0.43.0.md:118
msgid "# wrap-svn"
msgstr ""

#. type: Plain text
#: Release-notes-for-0.43.0.md:123
msgid ""
"The [Wrap dependency system](Wrap-dependency-system-manual.md) now supports "
"[Subversion](https://subversion.apache.org/) (svn).  This support is "
"rudimentary. The repository url has to point to a specific (sub)directory "
"containing the `meson.build` file (typically `trunk/`). However, providing a "
"`revision` is supported."
msgstr ""
