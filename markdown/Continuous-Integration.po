# Japanese translations for PACKAGE package
# Copyright (C) 2017 Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# Automatically generated, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2018-09-04 15:08+0900\n"
"PO-Revision-Date: 2017-09-30 21:43+0900\n"
"Last-Translator: Automatically generated\n"
"Language-Team: matsuand個人翻訳\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Plain text
#: Continuous-Integration.md:2
msgid "# Continuous Integration"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:5
msgid ""
"Here you will find snippets to use Meson with various CI such as Travis and "
"AppVeyor."
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:8
msgid ""
"Please [file an issue](https://github.com/mesonbuild/meson/issues/new)  if "
"these instructions don't work for you."
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:10
msgid "## Travis for OS X and Linux (with Docker)"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:15
msgid ""
"Travis for Linux provides ancient versions of Ubuntu which will likely cause "
"problems building your projects regardless of which build system you're "
"using. We recommend using Docker to get a more-recent version of Ubuntu and "
"installing Ninja, Python3, and Meson inside it."
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:19
msgid ""
"This `yml` file is derived from the [configuration used by Meson for running "
"its own tests](https://github.com/mesonbuild/meson/blob/master/.travis.yml)."
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:22 Continuous-Integration.md:117
msgid "```yaml sudo: false"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:26
#, no-wrap
msgid ""
"os:\n"
"  - linux\n"
"  - osx\n"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:29
#, no-wrap
msgid ""
"language:\n"
"  - cpp\n"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:32
#, no-wrap
msgid ""
"services:\n"
"  - docker\n"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:38
#, no-wrap
msgid ""
"before_install:\n"
"  - if [[ \"$TRAVIS_OS_NAME\" == \"osx\" ]]; then brew update; fi\n"
"  - if [[ \"$TRAVIS_OS_NAME\" == \"osx\" ]]; then brew install ninja python3; fi\n"
"  - if [[ \"$TRAVIS_OS_NAME\" == \"osx\" ]]; then pip3 install meson; fi\n"
"  - if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then docker pull YOUR/REPO:yakkety; fi\n"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:46
#, no-wrap
msgid ""
"script:\n"
"  - if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then echo FROM YOUR/REPO:yakkety > Dockerfile; fi\n"
"  - if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then echo ADD . /root >> Dockerfile; fi\n"
"  - if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then docker build -t withgit .; fi\n"
"  - if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then docker run withgit /bin/sh -c \"cd /root && TRAVIS=true CC=$CC CXX=$CXX meson builddir && ninja -C builddir test\"; fi\n"
"  - if [[ \"$TRAVIS_OS_NAME\" == \"osx\" ]]; then SDKROOT=$(xcodebuild -version -sdk macosx Path) meson builddir && ninja -C builddir test; fi\n"
"```\n"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:48
msgid "## AppVeyor for Windows"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:51
msgid ""
"For CI on Windows, [AppVeyor](https://www.appveyor.com/) is probably your "
"best bet. Here's a sample `yml` file for use with that."
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:54
msgid "```yaml os: Visual Studio 2017"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:65
#, no-wrap
msgid ""
"environment:\n"
"  matrix:\n"
"    - arch: x86\n"
"      compiler: msvc2015\n"
"    - arch: x64\n"
"      compiler: msvc2015\n"
"    - arch: x86\n"
"      compiler: msvc2017\n"
"    - arch: x64\n"
"      compiler: msvc2017\n"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:68
#, no-wrap
msgid ""
"platform:\n"
"  - x64\n"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:84
#, no-wrap
msgid ""
"install:\n"
"  # Download ninja\n"
"  - cmd: mkdir C:\\ninja-build\n"
"  - ps: (new-object net.webclient).DownloadFile('https://github.com/mesonbuild/cidata/raw/master/ninja.exe', 'C:\\ninja-build\\ninja.exe')\n"
"  # Set paths to dependencies (based on architecture)\n"
"  - cmd: if %arch%==x86 (set PYTHON_ROOT=C:\\python37) else (set PYTHON_ROOT=C:\\python37-x64)\n"
"  # Print out dependency paths\n"
"  - cmd: echo Using Python at %PYTHON_ROOT%\n"
"  # Add neccessary paths to PATH variable\n"
"  - cmd: set PATH=%cd%;C:\\ninja-build;%PYTHON_ROOT%;%PYTHON_ROOT%\\Scripts;%PATH%\n"
"  # Install meson\n"
"  - cmd: pip install meson\n"
"  # Set up the build environment\n"
"  - cmd: if %compiler%==msvc2015 ( call \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\vcvarsall.bat\" %arch% )\n"
"  - cmd: if %compiler%==msvc2017 ( call \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat\" %arch% )\n"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:89
#, no-wrap
msgid ""
"build_script:\n"
"  - cmd: echo Building on %arch% with %compiler%\n"
"  - cmd: meson --backend=ninja builddir\n"
"  - cmd: ninja -C builddir\n"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:93
#, no-wrap
msgid ""
"test_script:\n"
"  - cmd: ninja -C builddir test\n"
"```\n"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:95
msgid "### Qt"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:101
#, no-wrap
msgid ""
"For Qt 5, add the following line near the `PYTHON_ROOT` assignment:\n"
"```yaml\n"
" - cmd: if %arch%==x86 (set QT_ROOT=C:\\Qt\\5.11\\%compiler%) else (set QT_ROOT=C:\\Qt\\5.11\\%compiler%_64)\n"
"```\n"
"And afterwards add `%QT_ROOT%\\bin` to the `PATH` variable.\n"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:103
msgid ""
"You might have to adjust your build matrix as there are, for example, no "
"msvc2017 32-bit builds. Visit the [Build Environment](https://www.appveyor."
"com/docs/build-environment/) page in the AppVeyor docs for more details."
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:105
msgid "### Boost"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:110
#, no-wrap
msgid ""
"The following statement is sufficient for meson to find Boost:\n"
"```yaml\n"
" - cmd: set BOOST_ROOT=C:\\Libraries\\boost_1_67_0\n"
"```\n"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:112
msgid "## Travis without Docker"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:114
msgid ""
"You can cheat your way around docker by using **python** as language and "
"setting your compiler in the build **matrix**. This example just uses "
"**linux** and **c** but can be easily adapted to **c++** and **osx**."
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:120
msgid "os: linux dist: trusty"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:122
msgid "language: python"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:124
msgid "python: 3.6"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:129
#, no-wrap
msgid ""
"matrix:\n"
"  include:\n"
"    - env: CC=gcc\n"
"    - env: CC=clang\n"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:136
#, no-wrap
msgid ""
"install:\n"
"  - export NINJA_LATEST=$(curl -s https://api.github.com/repos/ninja-build/ninja/releases/latest | grep browser_download_url | cut -d '\"' -f 4 | grep ninja-linux.zip)\n"
"  - wget \"$NINJA_LATEST\"\n"
"  - unzip -q ninja-linux.zip -d build\n"
"  - export PATH=\"$PWD/build:$PATH\"\n"
"  - pip install meson\n"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:142 Continuous-Integration.md:166
#, no-wrap
msgid ""
"script:\n"
"  - meson builddir\n"
"  - ninja -C builddir\n"
"  - ninja -C builddir test\n"
"```\n"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:144
msgid ""
"This setup uses the **beta** group. It is not recommended but included here "
"for completeness:"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:149
msgid "```yaml sudo: false language: cpp group: beta"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:155
#, no-wrap
msgid ""
"matrix:\n"
"  include:\n"
"    - os: linux\n"
"      dist: trusty\n"
"    - os: osx\n"
msgstr ""

#. type: Plain text
#: Continuous-Integration.md:161
#, no-wrap
msgid ""
"install:\n"
"  - export PATH=\"`pwd`/build:${PATH}\"\n"
"  - if [[ \"$TRAVIS_OS_NAME\" == \"osx\" ]]; then brew update && brew install python3 ninja; fi\n"
"  - if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then wget https://github.com/ninja-build/ninja/releases/download/v1.7.2/ninja-linux.zip && unzip -q ninja-linux.zip -d build; fi\n"
"  - pip3 install meson\n"
msgstr ""
