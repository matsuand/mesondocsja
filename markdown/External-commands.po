# Japanese translations for PACKAGE package
# Copyright (C) 2017 Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# Automatically generated, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2017-09-30 21:43+0900\n"
"PO-Revision-Date: 2017-09-30 21:43+0900\n"
"Last-Translator: Automatically generated\n"
"Language-Team: matsuand個人翻訳\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Plain text
#: External-commands.md:1
#, no-wrap
msgid "---\n"
msgstr ""

#. type: Plain text
#: External-commands.md:4
msgid "short-description: Running external commands ..."
msgstr "short-description: 外部コマンドの実行\n..."

#. type: Plain text
#: External-commands.md:6
msgid "# External commands"
msgstr "# 外部コマンド"

#. type: Plain text
#: External-commands.md:9
msgid ""
"As a part of the software configuration, you may want to get extra data by "
"running external commands. The basic syntax is the following."
msgstr ""

#. type: Plain text
#: External-commands.md:18
#, no-wrap
msgid ""
"```meson\n"
"r = run_command('command', 'arg1', 'arg2', 'arg3')\n"
"if r.returncode() != 0\n"
"  # it failed\n"
"endif\n"
"output = r.stdout().strip()\n"
"errortxt = r.stderr().strip()\n"
"```\n"
msgstr ""

#. type: Plain text
#: External-commands.md:26
msgid ""
"The `run_command` function returns an object that can be queried for return "
"value and text written to stdout and stderr. The `strip` method call is used "
"to strip trailing and leading whitespace from strings. Usually output from "
"command line programs ends in a newline, which is unwanted in string "
"variables. The first argument can be either a string or an executable you "
"have detected earlier with `find_program`."
msgstr ""

#. type: Plain text
#: External-commands.md:34
msgid ""
"Note that you can not pass your command line as a single string. That is, "
"calling `run_command('do_something foo bar')` will not work. You must either "
"split up the string into separate arguments or pass the split command as an "
"array. It should also be noted that Meson will not pass the command to the "
"shell, so any command lines that try to use things such as environment "
"variables, backticks or pipelines will not work. If you require shell "
"semantics, write your command into a script file and call that with "
"`run_command`."
msgstr ""
