# Japanese translations for PACKAGE package
# Copyright (C) 2017 Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# Automatically generated, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2017-10-24 18:52+0900\n"
"PO-Revision-Date: 2017-09-30 21:43+0900\n"
"Last-Translator: Automatically generated\n"
"Language-Team: matsuand個人翻訳\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Plain text
#: Installing.md:1
#, no-wrap
msgid "---\n"
msgstr ""

#. type: Plain text
#: Installing.md:4
msgid "short-description: Installing targets ..."
msgstr ""
"short-description: Installing targets\n"
"..."

#. type: Plain text
#: Installing.md:6
msgid "# Installing"
msgstr "# インストール"

#. type: Plain text
#: Installing.md:8
msgid ""
"By default Meson will not install anything. Build targets can be installed "
"by tagging them as installable in the definition."
msgstr ""

#. type: Plain text
#: Installing.md:13
msgid ""
"```meson project('install', 'c')  shared_library('mylib', 'libfile.c', "
"install : true)  ```"
msgstr ""
"```meson\n"
"project('install', 'c') \n"
"shared_library('mylib', 'libfile.c', install : true) \n"
"```"

#. type: Plain text
#: Installing.md:19
msgid ""
"There is usually no need to specify install paths or the like. Meson will "
"automatically install it to the standards-conforming location. In this "
"particular case the executable is installed to the `bin` subdirectory of the "
"install prefix. However if you wish to override the install dir, you can do "
"that with the `install_dir` argument."
msgstr ""

#. type: Plain text
#: Installing.md:23
msgid ""
"```meson executable('prog', 'prog.c', install : true, install_dir : 'my/"
"special/dir')  ```"
msgstr ""
"```meson\n"
"executable('prog', 'prog.c', install : true, install_dir : 'my/special/dir') "
"```"

#. type: Plain text
#: Installing.md:25
msgid "Other install commands are the following."
msgstr ""

#. type: Plain text
#: Installing.md:31
msgid ""
"```meson install_headers('header.h', subdir : 'projname') # -> include/"
"projname/header.h install_man('foo.1') # -> share/man/man1/foo.1.gz "
"install_data('datafile.cat', install_dir : join_paths(get_option('datadir'), "
"'progname')) # -> share/progname/datafile.dat ```"
msgstr ""
"```meson\n"
"install_headers('header.h', subdir : 'projname') # -> include/projname/"
"header.h\n"
"install_man('foo.1') # -> share/man/man1/foo.1.gz \n"
"install_data('datafile.cat', install_dir : join_paths(get_option('datadir'), "
"'progname')) # -> share/progname/datafile.dat\n"
"```"

#. type: Plain text
#: Installing.md:33
msgid ""
"Sometimes you want to copy an entire subtree directly. For this use case "
"there is the `install_subdir` command, which can be used like this."
msgstr ""

#. type: Plain text
#: Installing.md:37
msgid ""
"```meson install_subdir('mydir', install_dir : 'include') # mydir subtree -> "
"include/mydir ```"
msgstr ""
"```meson\n"
"install_subdir('mydir', install_dir : 'include') # mydir subtree -> include/"
"mydir\n"
"```"

#. type: Plain text
#: Installing.md:42
msgid ""
"Most of the time you want to install files relative to the install prefix. "
"Sometimes you need to go outside of the prefix (such as writing files to `/"
"etc` instead of `/usr/etc`. This can be accomplished by giving an absolute "
"install path."
msgstr ""

#. type: Plain text
#: Installing.md:46
msgid ""
"```meson install_data(sources : 'foo.dat', install_dir : '/etc') # -> /etc/"
"foo.dat ```"
msgstr ""
"```meson\n"
"install_data(sources : 'foo.dat', install_dir : '/etc') # -> /etc/foo.dat\n"
"```"

#. type: Plain text
#: Installing.md:48
msgid "## Custom install behavior"
msgstr "## インストール方法のカスタマイズ"

#. type: Plain text
#: Installing.md:50
msgid ""
"Sometimes you need to do more than just install basic targets. Meson makes "
"this easy by allowing you to specify a custom script to execute at install "
"time. As an example, here is a script that generates an empty file in a "
"custom directory."
msgstr ""

#. type: Plain text
#: Installing.md:53
msgid "```bash #!/bin/sh"
msgstr ""
"```bash\n"
"#!/bin/sh"

#. type: Plain text
#: Installing.md:57
msgid ""
"mkdir \"${DESTDIR}/${MESON_INSTALL_PREFIX}/mydir\" touch \"${DESTDIR}/"
"${MESON_INSTALL_PREFIX}/mydir/file.dat\" ```"
msgstr ""
"mkdir \"${DESTDIR}/${MESON_INSTALL_PREFIX}/mydir\"\n"
"touch \"${DESTDIR}/${MESON_INSTALL_PREFIX}/mydir/file.dat\"\n"
"```"

#. type: Plain text
#: Installing.md:59
msgid ""
"As you can see, Meson sets up some environment variables to help you write "
"your script (`DESTDIR` is not set by Meson, it is inherited from the outside "
"environment). In addition to the install prefix, Meson also sets the "
"variables `MESON_SOURCE_ROOT` and `MESON_BUILD_ROOT`."
msgstr ""

#. type: Plain text
#: Installing.md:61
msgid "Telling Meson to run this script at install time is a one-liner."
msgstr ""

#. type: Plain text
#: Installing.md:65
msgid "```meson meson.add_install_script('myscript.sh')  ```"
msgstr ""
"```meson\n"
"meson.add_install_script('myscript.sh') \n"
"```"

#. type: Plain text
#: Installing.md:67
msgid ""
"The argument is the name of the script file relative to the current "
"subdirectory."
msgstr ""

#. type: Plain text
#: Installing.md:69
msgid "## DESTDIR support"
msgstr "## DESTDIR サポート"

#. type: Plain text
#: Installing.md:71
msgid ""
"Sometimes you need to install to a different directory than the install "
"prefix. This is most common when building rpm or deb packages. This is done "
"with the `DESTDIR` environment variable and it is used just like with other "
"build systems:"
msgstr ""

#. type: Plain text
#: Installing.md:74
msgid "```console $ DESTDIR=/path/to/staging/area ninja install ```"
msgstr ""
"```console\n"
"$ DESTDIR=/path/to/staging/area ninja install\n"
"```"
