# Japanese translations for PACKAGE package
# Copyright (C) 2017 Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# Automatically generated, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2018-09-01 16:24+0900\n"
"PO-Revision-Date: 2017-09-30 21:44+0900\n"
"Last-Translator: Automatically generated\n"
"Language-Team: matsuand個人翻訳\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Plain text
#: Porting-from-autotools.md:2
msgid "# Porting from Autotools"
msgstr "# Autotools からの移植"

#. type: Plain text
#: Porting-from-autotools.md:4
msgid ""
"This page uses [AppStream-glib](https://github.com/hughsie/appstream-glib/) "
"as an example project. AppStream-Glib contains some libraries, GObject "
"Introspection data, tests, man pages, i18n, bash-completion with optional "
"flags to build/not build support for some things."
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:6
msgid ""
"Meson comes with a helper script `ac_converter` that you can use to convert "
"the basic autoconf checks for your project."
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:8
msgid "## Configure.ac"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:10
msgid "First let's look at `configure.ac` and write the same in `meson.build`."
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:15
msgid ""
"```autoconf AC_PREREQ(2.63)  ``` Meson doesn't provide the same function, so "
"just ignore this."
msgstr ""
"```autoconf\nAC_PREREQ(2.63)\n"
"```\n"
"Meson doesn't provide the same function, so just ignore this."

#. type: Plain text
#: Porting-from-autotools.md:27
#, no-wrap
msgid ""
"### Defining variables\n"
"`configure.ac`:\n"
"```autoconf\n"
"m4_define([as_major_version], [0])\n"
"m4_define([as_minor_version], [3])\n"
"m4_define([as_micro_version], [6])\n"
"m4_define([as_version],\n"
"          [as_major_version.as_minor_version.as_micro_version])\n"
"```\n"
"`meson.build`:\n"
"```meson\n"
msgstr ""
"### 変数定義\n"
"`configure.ac`:\n"
"```autoconf\n"
"m4_define([as_major_version], [0])\n"
"m4_define([as_minor_version], [3])\n"
"m4_define([as_micro_version], [6])\n"
"m4_define([as_version],\n"
"          [as_major_version.as_minor_version.as_micro_version])\n"
"```\n"
"`meson.build`:\n"
"```meson\n"

#. type: Plain text
#: Porting-from-autotools.md:30
msgid ""
"as_version = meson.project_version() # set in project() below ver_arr = "
"as_version.split('.')"
msgstr ""
"as_version = meson.project_version() # set in project() below\nver_arr = "
"as_version.split('.')"

#. type: Plain text
#: Porting-from-autotools.md:35
msgid ""
"as_major_version = ver_arr[0] as_minor_version = ver_arr[1] as_micro_version "
"= ver_arr[2] ```"
msgstr ""
"as_major_version = ver_arr[0]\nas_minor_version = ver_arr[1]\nas_micro_version "
"= ver_arr[2]\n```"

#. type: Plain text
#: Porting-from-autotools.md:47
msgid ""
"### Initializing project and setting compilers `configure.ac`: ```autoconf "
"AC_INIT([appstream-glib],[as_version])  AC_PROG_CC ``` `meson.build`: "
"```meson project('appstream-glib', 'c', version : '0.3.6')  ``` Note that "
"this must be the first line of your `meson.build` file."
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:56
msgid ""
"### AC_SUBST `configure.ac`: ```autoconf AC_SUBST(AS_MAJOR_VERSION)  "
"AC_SUBST(AS_MINOR_VERSION)  AC_SUBST(AS_MICRO_VERSION)  "
"AC_SUBST(AS_VERSION)  ```"
msgstr ""
"### AC_SUBST\n`configure.ac`:\n```autoconf\nAC_SUBST(AS_MAJOR_VERSION)\n"
"AC_SUBST(AS_MINOR_VERSION)\nAC_SUBST(AS_MICRO_VERSION)\n"
"AC_SUBST(AS_VERSION)\n```"

#. type: Plain text
#: Porting-from-autotools.md:58
msgid ""
"You don't need to do the same in Meson, because it does not have two "
"different types of files (Makefile, configure)."
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:60
msgid "### Auto headers"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:62 Porting-from-autotools.md:84
#: Porting-from-autotools.md:105 Porting-from-autotools.md:119
msgid "`configure.ac`:"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:66
msgid "```autoconf AC_CONFIG_HEADERS([config.h])  ```"
msgstr "```autoconf\nAC_CONFIG_HEADERS([config.h])\n```"

#. type: Plain text
#: Porting-from-autotools.md:68 Porting-from-autotools.md:94
#: Porting-from-autotools.md:111 Porting-from-autotools.md:133
#: Porting-from-autotools.md:163 Porting-from-autotools.md:237
#: Porting-from-autotools.md:271 Porting-from-autotools.md:350
#: Porting-from-autotools.md:428 Porting-from-autotools.md:451
#: Porting-from-autotools.md:480 Porting-from-autotools.md:550
msgid "`meson.build`:"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:76
#, no-wrap
msgid ""
"```meson\n"
"conf = configuration_data()\n"
"# Surround the version in quotes to make it a C string\n"
"conf.set_quoted('VERSION', as_version)\n"
"configure_file(output : 'config.h',\n"
"               configuration : conf)\n"
"```\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:78
msgid ""
"Meson doesn't support autoheaders, you need to manually specify what do you "
"want to see in header file, write `configuration_data()` object and use "
"`configure_file()`."
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:80
msgid ""
"You can also substitute variables of type `@SOME_VAR@` with configure data. "
"The details are on the [configuration page](Configuration.md)."
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:82
msgid "### Finding programs"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:92
#, no-wrap
msgid ""
"```autoconf\n"
"AC_PATH_PROG(GPERF, [gperf], [no])\n"
"if test x$GPERF != xno ; then\n"
"        AC_DEFINE(HAVE_GPERF,[1], [Use gperf])\n"
"fi\n"
"AM_CONDITIONAL(HAVE_GPERF, [test x$GPERF != xno])\n"
"```\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:101
#, no-wrap
msgid ""
"```meson\n"
"gperf = find_program('gperf', required : false)\n"
"if gperf.found()\n"
"  conf.set('HAVE_GPERF', 1)\n"
"endif\n"
"```\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:103
msgid "### Finding pkg-config modules"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:109
msgid "```autoconf PKG_CHECK_MODULES(SOUP, libsoup-2.4 >= 2.24)  ```"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:115
msgid "```meson soup = dependency('libsoup-2.4', version : '>= 2.24')  ```"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:117
msgid "### Arguments"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:131
#, no-wrap
msgid ""
"```autoconf\n"
"AC_ARG_ENABLE(dep11, AS_HELP_STRING([--enable-dep11],[enable DEP-11]),\n"
"              enable_dep11=$enableval,enable_dep11=yes)\n"
"AM_CONDITIONAL(HAVE_DEP11, test x$enable_dep11 = xyes)\n"
"if test x$enable_dep11 = xyes; then\n"
"  AC_CHECK_HEADER(yaml.h, [], [AC_MSG_ERROR([No yaml.h])])\n"
"  YAML_LIBS=\"-lyaml\"\n"
"  AC_SUBST(YAML_LIBS)\n"
"  AC_DEFINE(AS_BUILD_DEP11,1,[Build DEP-11 code])\n"
"fi\n"
"```\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:142
#, no-wrap
msgid ""
"```meson\n"
"if get_option('enable-dep11')\n"
"  yaml = dependency('yaml-0.1')\n"
"  conf.set('AS_BUILD_DEP11', 1)\n"
"else\n"
"  yaml = dependency('yaml-0.1', required : false)\n"
"endif\n"
"```\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:144
msgid "`meson_options.txt`:"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:148
msgid ""
"```meson option('enable-dep11', type : 'boolean', value : true, "
"description : 'enable DEP-11')  ```"
msgstr ""
"```meson\noption('enable-dep11', type : 'boolean', value : true, "
"description : 'enable DEP-11')\n```"

#. type: Plain text
#: Porting-from-autotools.md:150
msgid "## Makefile.am"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:152
msgid ""
"Next step is `Makefile.am`. In meson you don't need to have other file, you "
"still use `meson.build`."
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:154
msgid "### Sub directories"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:156 Porting-from-autotools.md:171
#: Porting-from-autotools.md:248 Porting-from-autotools.md:416
#: Porting-from-autotools.md:442 Porting-from-autotools.md:461
#: Porting-from-autotools.md:494
msgid "`Makefile.am`:"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:161
#, no-wrap
msgid ""
"```make\n"
"SUBDIRS =                                         \\\n"
"        libappstream-glib\n"
"```\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:167
msgid "```meson subdir('libappstream-glib')  ```"
msgstr "```meson\nsubdir('libappstream-glib')\n```"

#. type: Plain text
#: Porting-from-autotools.md:169
msgid "### *CLEANFILES, EXTRA_DIST, etc."
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:175
#, no-wrap
msgid ""
"```make\n"
"DISTCLEANFILES =                                        \\\n"
"        appstream-glib-*.tar.xz\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:185
#, no-wrap
msgid ""
"MAINTAINERCLEANFILES =                                  \\\n"
"        *~                                              \\\n"
"        ABOUT-NLS                                       \\\n"
"        aclocal.m4                                      \\\n"
"        ChangeLog                                       \\\n"
"        compile                                         \\\n"
"        config.guess                                    \\\n"
"        config.h.*                                      \\\n"
"        config.rpath\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:195
#, no-wrap
msgid ""
"EXTRA_DIST =                                            \\\n"
"        COPYING                                         \\\n"
"        MAINTAINERS                                     \\\n"
"        AUTHORS                                         \\\n"
"        README.md                                       \\\n"
"        NEWS                                            \\\n"
"        autogen.sh                                      \\\n"
"        config.h\n"
"```\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:197
msgid ""
"In Meson you don't need have `*CLEANFILES`, because in meson you are "
"building in temporary directory (usually called `build`), you manually "
"removing it. You also not need to use `EXTRA_DIST`, because you will make "
"tarballs via `git archive` or something like this."
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:199
msgid "### glib-compile-resources"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:230
#, no-wrap
msgid ""
"`Makefile.am`:\n"
"```make\n"
"as-resources.c: appstream-glib.gresource.xml                    \\\n"
"                as-stock-icons.txt                              \\\n"
"                as-license-ids.txt                              \\\n"
"                as-blacklist-ids.txt                            \\\n"
"                as-category-ids.txt                             \\\n"
"                as-environment-ids.txt\n"
"        $(AM_V_GEN)                                             \\\n"
"        glib-compile-resources                                  \\\n"
"                --sourcedir=$(srcdir)                           \\\n"
"                --sourcedir=$(top_builddir)/data                \\\n"
"                --target=$@                                     \\\n"
"                --generate-source                               \\\n"
"                --c-name as                                     \\\n"
"                $(srcdir)/appstream-glib.gresource.xml\n"
"as-resources.h: appstream-glib.gresource.xml                    \\\n"
"                as-stock-icons.txt                              \\\n"
"                as-license-ids.txt                              \\\n"
"                as-blacklist-ids.txt                            \\\n"
"                as-category-ids.txt                             \\\n"
"                as-environment-ids.txt\n"
"        $(AM_V_GEN)                                             \\\n"
"        glib-compile-resources                                  \\\n"
"                --sourcedir=$(srcdir)                           \\\n"
"                --sourcedir=$(top_builddir)/data                \\\n"
"                --target=$@                                     \\\n"
"                --generate-header                               \\\n"
"                --c-name as                                     \\\n"
"                $(srcdir)/appstream-glib.gresource.xml\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:235
#, no-wrap
msgid ""
"BUILT_SOURCES =                                                 \\\n"
"        as-resources.c                                          \\\n"
"        as-resources.h\n"
"```\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:244
#, no-wrap
msgid ""
"```meson\n"
"asresources = gnome.compile_resources(\n"
"  'as-resources', 'appstream-glib.gresource.xml',\n"
"  source_dir : '.',\n"
"  c_name : 'as')\n"
"```\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:246
msgid "### Headers"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:269
#, no-wrap
msgid ""
"```make\n"
"libappstream_glib_includedir = $(includedir)/libappstream-glib\n"
"libappstream_glib_include_HEADERS =                             \\\n"
"        appstream-glib.h                                        \\\n"
"        as-app.h                                                \\\n"
"        as-bundle.h                                             \\\n"
"        as-enums.h                                              \\\n"
"        as-icon.h                                               \\\n"
"        as-image.h                                              \\\n"
"        as-inf.h                                                \\\n"
"        as-node.h                                               \\\n"
"        as-problem.h                                            \\\n"
"        as-provide.h                                            \\\n"
"        as-release.h                                            \\\n"
"        as-screenshot.h                                         \\\n"
"        as-store.h                                              \\\n"
"        as-tag.h                                                \\\n"
"        as-utils.h                                              \\\n"
"        as-version.h\n"
"```\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:292
#, no-wrap
msgid ""
"```meson\n"
"headers = [\n"
"  'appstream-glib.h',\n"
"  'as-app.h',\n"
"  'as-bundle.h',\n"
"  'as-enums.h',\n"
"  'as-icon.h',\n"
"  'as-image.h',\n"
"  'as-inf.h',\n"
"  'as-node.h',\n"
"  'as-problem.h',\n"
"  'as-provide.h',\n"
"  'as-release.h',\n"
"  'as-screenshot.h',\n"
"  'as-store.h',\n"
"  'as-tag.h',\n"
"  'as-utils.h',\n"
"  'as-version.h']\n"
"install_headers(headers, subdir : 'libappstream-glib')\n"
"```\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:294
msgid "### Libraries"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:334
#, no-wrap
msgid ""
"`Makefile.am`:\n"
"```make\n"
"lib_LTLIBRARIES =                                               \\\n"
"        libappstream-glib.la\n"
"libappstream_glib_la_SOURCES =                                  \\\n"
"        as-app.c                                                \\\n"
"        as-app-desktop.c                                        \\\n"
"        as-app-inf.c                                            \\\n"
"        as-app-private.h                                        \\\n"
"        as-app-validate.c                                       \\\n"
"        as-bundle.c                                             \\\n"
"        as-bundle-private.h                                     \\\n"
"        as-cleanup.h                                            \\\n"
"        as-enums.c                                              \\\n"
"        as-icon.c                                               \\\n"
"        as-icon-private.h                                       \\\n"
"        as-image.c                                              \\\n"
"        as-image-private.h                                      \\\n"
"        as-inf.c                                                \\\n"
"        as-inf.h                                                \\\n"
"        as-node.c                                               \\\n"
"        as-node-private.h                                       \\\n"
"        as-problem.c                                            \\\n"
"        as-problem.h                                            \\\n"
"        as-provide.c                                            \\\n"
"        as-provide-private.h                                    \\\n"
"        as-release.c                                            \\\n"
"        as-release-private.h                                    \\\n"
"        as-resources.c                                          \\\n"
"        as-resources.h                                          \\\n"
"        as-screenshot.c                                         \\\n"
"        as-screenshot-private.h                                 \\\n"
"        as-store.c                                              \\\n"
"        as-tag.c                                                \\\n"
"        as-utils.c                                              \\\n"
"        as-utils-private.h                                      \\\n"
"        as-version.h                                            \\\n"
"        as-yaml.c                                               \\\n"
"        as-yaml.h\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:341
#, no-wrap
msgid ""
"libappstream_glib_la_LIBADD =                                   \\\n"
"        $(GLIB_LIBS)                                            \\\n"
"        $(GDKPIXBUF_LIBS)                                       \\\n"
"        $(LIBARCHIVE_LIBS)                                      \\\n"
"        $(SOUP_LIBS)                                            \\\n"
"        $(YAML_LIBS)\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:348
#, no-wrap
msgid ""
"libappstream_glib_la_LDFLAGS =                                  \\\n"
"        -version-info $(LT_CURRENT):$(LT_REVISION):$(LT_AGE)    \\\n"
"        -export-dynamic                                         \\\n"
"        -no-undefined                                           \\\n"
"        -export-symbols-regex '^as_.*'\n"
"```\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:386
#, no-wrap
msgid ""
"```meson\n"
"sources = [\n"
"  'as-app.c',\n"
"  'as-app-desktop.c',\n"
"  'as-app-inf.c',\n"
"  'as-app-private.h',\n"
"  'as-app-validate.c',\n"
"  'as-bundle.c',\n"
"  'as-bundle-private.h',\n"
"  'as-cleanup.h',\n"
"  'as-enums.c',\n"
"  'as-icon.c',\n"
"  'as-icon-private.h',\n"
"  'as-image.c',\n"
"  'as-image-private.h',\n"
"  'as-inf.c',\n"
"  'as-inf.h',\n"
"  'as-node.c',\n"
"  'as-node-private.h',\n"
"  'as-problem.c',\n"
"  'as-problem.h',\n"
"  'as-provide.c',\n"
"  'as-provide-private.h',\n"
"  'as-release.c',\n"
"  'as-release-private.h',\n"
"  asresources,\n"
"  'as-screenshot.c',\n"
"  'as-screenshot-private.h',\n"
"  'as-store.c',\n"
"  'as-tag.c',\n"
"  'as-utils.c',\n"
"  'as-utils-private.h',\n"
"  'as-version.h',\n"
"  'as-yaml.c',\n"
"  'as-yaml.h']\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:388
msgid "deps = [glib, gdkpixbuf, libarchive, soup, yaml]"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:401
#, no-wrap
msgid ""
"mapfile = 'appstream-glib.map'\n"
"vflag = '-Wl,--version-script,@0@/@1@'.format(meson.current_source_dir(), mapfile)\n"
"asglib = shared_library(\n"
"  'appstream-glib', sources,\n"
"  soversion : lt_current,\n"
"  version : lt_version,\n"
"  dependencies : deps,\n"
"  include_directories : include_directories('@0@/..'.format(meson.current_build_dir())),\n"
"  link_args : ['-Wl,--no-undefined', vflag],\n"
"  link_depends : mapfile,\n"
"  install : true)\n"
"```\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:403
msgid "`appstream-glib.map`:"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:412
#, no-wrap
msgid ""
"```\n"
"{\n"
"global:\n"
"    as_*;\n"
"local:\n"
"    *;\n"
"};\n"
"```\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:414
msgid "### Custom targets"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:421
#, no-wrap
msgid ""
"```make\n"
"if HAVE_GPERF\n"
"as-tag-private.h: as-tag.gperf\n"
"        $(AM_V_GEN) gperf < $< > $@\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:426
msgid ""
"libappstream_glib_la_SOURCES += as-tag-private.h BUILT_SOURCES += as-tag-"
"private.h endif ```"
msgstr ""
"libappstream_glib_la_SOURCES += as-tag-private.h BUILT_SOURCES += as-tag-"
"private.h endif\n```"

#. type: Plain text
#: Porting-from-autotools.md:438
#, no-wrap
msgid ""
"```meson\n"
"if gperf.found()\n"
"  astagpriv = custom_target('gperf as-tag',\n"
"                            output : 'as-tag-private.h',\n"
"                            input : 'as-tag.gperf',\n"
"                            command : [gperf, '@INPUT@', '--output-file', '@OUTPUT@'])\n"
"  sources = sources + [astagpriv]\n"
"endif\n"
"```\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:440
msgid "### Global CFLAGS"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:449
#, no-wrap
msgid ""
"```make\n"
"AM_CPPFLAGS =                                                   \\\n"
"        -DAS_COMPILATION                                        \\\n"
"        -DLOCALSTATEDIR=\\\"\"$(localstatedir)\"\\\"                  \\\n"
"        -DG_LOG_DOMAIN=\\\"As\\\"\n"
"```\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:457
msgid ""
"```meson add_global_arguments('-DG_LOG_DOMAIN=\"As\"', language : 'c')  "
"add_global_arguments('-DAS_COMPILATION', language : 'c')  "
"add_global_arguments('-DLOCALSTATEDIR=\"/var\"', language : 'c')  ```"
msgstr ""
"```meson\nadd_global_arguments('-DG_LOG_DOMAIN=\"As\"', language : 'c')\n"
"add_global_arguments('-DAS_COMPILATION', language : 'c')\n"
"add_global_arguments('-DLOCALSTATEDIR=\"/var\"', language : 'c')\n```"

#. type: Plain text
#: Porting-from-autotools.md:459
msgid "### Tests"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:475
#, no-wrap
msgid ""
"```make\n"
"check_PROGRAMS =                                                \\\n"
"        as-self-test\n"
"as_self_test_SOURCES =                                          \\\n"
"        as-self-test.c\n"
"as_self_test_LDADD =                                            \\\n"
"        $(GLIB_LIBS)                                            \\\n"
"        $(GDKPIXBUF_LIBS)                                       \\\n"
"        $(LIBARCHIVE_LIBS)                                      \\\n"
"        $(SOUP_LIBS)                                            \\\n"
"        $(YAML_LIBS)                                            \\\n"
"        $(lib_LTLIBRARIES)\n"
"as_self_test_CFLAGS = -DTESTDATADIR=\\\"\"$(top_srcdir)/data/tests\"\\\"\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:478
msgid "TESTS = as-self-test ```"
msgstr "TESTS = as-self-test\n```"

#. type: Plain text
#: Porting-from-autotools.md:490
#, no-wrap
msgid ""
"```meson\n"
"selftest = executable(\n"
"  'as-self-test', 'as-self-test.c',\n"
"  include_directories : include_directories('@0@/..'.format(meson.current_build_dir())),\n"
"  dependencies : deps,\n"
"  c_args : '-DTESTDATADIR=\"@0@/../data/tests\"'.format(meson.current_source_dir()),\n"
"  link_with : asglib)\n"
"test('as-self-test', selftest)\n"
"```\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:492
msgid "### GObject Introspection"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:527
#, no-wrap
msgid ""
"```make\n"
"introspection_sources =                                         \\\n"
"        as-app.c                                                \\\n"
"        as-app-validate.c                                       \\\n"
"        as-app.h                                                \\\n"
"        as-bundle.c                                             \\\n"
"        as-bundle.h                                             \\\n"
"        as-enums.c                                              \\\n"
"        as-enums.h                                              \\\n"
"        as-icon.c                                               \\\n"
"        as-icon.h                                               \\\n"
"        as-image.c                                              \\\n"
"        as-image.h                                              \\\n"
"        as-inf.c                                                \\\n"
"        as-inf.h                                                \\\n"
"        as-node.c                                               \\\n"
"        as-node.h                                               \\\n"
"        as-problem.c                                            \\\n"
"        as-problem.h                                            \\\n"
"        as-provide.c                                            \\\n"
"        as-provide.h                                            \\\n"
"        as-release.c                                            \\\n"
"        as-release.h                                            \\\n"
"        as-screenshot.c                                         \\\n"
"        as-screenshot.h                                         \\\n"
"        as-store.c                                              \\\n"
"        as-store.h                                              \\\n"
"        as-tag.c                                                \\\n"
"        as-tag.h                                                \\\n"
"        as-utils.c                                              \\\n"
"        as-utils.h                                              \\\n"
"        as-version.h\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:539
#, no-wrap
msgid ""
"AppStreamGlib-1.0.gir: libappstream-glib.la\n"
"AppStreamGlib_1_0_gir_INCLUDES = GObject-2.0 Gio-2.0 GdkPixbuf-2.0\n"
"AppStreamGlib_1_0_gir_CFLAGS = $(AM_CPPFLAGS)\n"
"AppStreamGlib_1_0_gir_SCANNERFLAGS = --identifier-prefix=As \\\n"
"                                --symbol-prefix=as_ \\\n"
"                                --warn-all \\\n"
"                                --add-include-path=$(srcdir)\n"
"AppStreamGlib_1_0_gir_EXPORT_PACKAGES = appstream-glib\n"
"AppStreamGlib_1_0_gir_LIBS = libappstream-glib.la\n"
"AppStreamGlib_1_0_gir_FILES = $(introspection_sources)\n"
"INTROSPECTION_GIRS += AppStreamGlib-1.0.gir\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:542
msgid "girdir = $(datadir)/gir-1.0 gir_DATA = $(INTROSPECTION_GIRS)"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:545
msgid ""
"typelibdir = $(libdir)/girepository-1.0 typelib_DATA = $(INTROSPECTION_GIRS:."
"gir=.typelib)"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:548
msgid "CLEANFILES += $(gir_DATA) $(typelib_DATA)  ```"
msgstr "CLEANFILES += $(gir_DATA) $(typelib_DATA)\n```"

#. type: Plain text
#: Porting-from-autotools.md:583
#, no-wrap
msgid ""
"```meson\n"
"introspection_sources = [\n"
"  'as-app.c',\n"
"  'as-app-validate.c',\n"
"  'as-app.h',\n"
"  'as-bundle.c',\n"
"  'as-bundle.h',\n"
"  'as-enums.c',\n"
"  'as-enums.h',\n"
"  'as-icon.c',\n"
"  'as-icon.h',\n"
"  'as-image.c',\n"
"  'as-image.h',\n"
"  'as-inf.c',\n"
"  'as-inf.h',\n"
"  'as-node.c',\n"
"  'as-node.h',\n"
"  'as-problem.c',\n"
"  'as-problem.h',\n"
"  'as-provide.c',\n"
"  'as-provide.h',\n"
"  'as-release.c',\n"
"  'as-release.h',\n"
"  'as-screenshot.c',\n"
"  'as-screenshot.h',\n"
"  'as-store.c',\n"
"  'as-store.h',\n"
"  'as-tag.c',\n"
"  'as-tag.h',\n"
"  'as-utils.c',\n"
"  'as-utils.h',\n"
"  'as-version.h']\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:595
#, no-wrap
msgid ""
"gnome.generate_gir(asglib,\n"
"  sources : introspection_sources,\n"
"  nsversion : '1.0',\n"
"  namespace : 'AppStreamGlib',\n"
"  symbol_prefix : 'as_',\n"
"  identifier_prefix : 'As',\n"
"  export_packages : 'appstream-glib',\n"
"  includes : ['GObject-2.0', 'Gio-2.0', 'GdkPixbuf-2.0'],\n"
"  install : true\n"
")\n"
"```\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:597
msgid "### GSettings"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:602
msgid "`configure.ac`: ```sh GLIB_GSETTINGS ```"
msgstr "`configure.ac`:\n```sh\nGLIB_GSETTINGS\n```"

#. type: Plain text
#: Porting-from-autotools.md:608
msgid ""
"`Makefile.am`: ```make gsettings_SCHEMAS = foo.gschema.xml @GSETTINGS_RULES@ "
"```"
msgstr ""
"`Makefile.am`:\n```make\ngsettings_SCHEMAS = foo.gschema.xml @GSETTINGS_RULES@\n"
"```"

#. type: Plain text
#: Porting-from-autotools.md:614
msgid ""
"`meson.build`: ```meson install_data('foo.gschema.xml', install_dir: "
"join_paths(get_option('datadir'), 'glib-2.0', 'schemas'))  meson."
"add_install_script('meson_post_install.py')  ```"
msgstr ""
"`meson.build`:\n```meson\ninstall_data('foo.gschema.xml', install_dir: "
"join_paths(get_option('datadir'), 'glib-2.0', 'schemas'))\nmeson."
"add_install_script('meson_post_install.py')\n```"

#. type: Plain text
#: Porting-from-autotools.md:618
msgid "`meson_post_install.py`: ```python #!/usr/bin/env python3"
msgstr "`meson_post_install.py`:\n```python\n#!/usr/bin/env python3"

#. type: Plain text
#: Porting-from-autotools.md:621
msgid "import os import subprocess"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:623
msgid ""
"schemadir = os.path.join(os.environ['MESON_INSTALL_PREFIX'], 'share', "
"'glib-2.0', 'schemas')"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:628
#, no-wrap
msgid ""
"if not os.environ.get('DESTDIR'):\n"
"    print('Compiling gsettings schemas...')\n"
"    subprocess.call(['glib-compile-schemas', schemadir])\n"
"```\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:630
msgid "### gettext"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:632
msgid "Note this example does not include `intltool` usage."
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:637
msgid ""
"`configure.ac`: ```m4 AM_GNU_GETTEXT([external])  "
"AM_GNU_GETTEXT_VERSION([0.19.7])"
msgstr ""
"`configure.ac`:\n```m4\nAM_GNU_GETTEXT([external])  "
"AM_GNU_GETTEXT_VERSION([0.19.7])"

#. type: Plain text
#: Porting-from-autotools.md:642
msgid ""
"GETTEXT_PACKAGE=foo AC_SUBST(GETTEXT_PACKAGE)  "
"AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, \"$GETTEXT_PACKAGE\", [The prefix for "
"our gettext translation domains.])  ```"
msgstr ""
"GETTEXT_PACKAGE=foo AC_SUBST(GETTEXT_PACKAGE)\n"
"AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, \"$GETTEXT_PACKAGE\", [The prefix for "
"our gettext translation domains.])\n```"

#. type: Plain text
#: Porting-from-autotools.md:647
msgid ""
"`po/Makevars`: ```make XGETTEXT_OPTIONS = --from-code=UTF-8 --keyword=_ --"
"keyword=N_ --keyword=C_:1c,2 --keyword=NC_:1c,2 --keyword=g_dngettext:2,3 --"
"add-comments ```"
msgstr ""
"`po/Makevars`:\n```make\nXGETTEXT_OPTIONS = --from-code=UTF-8 --keyword=_ --"
"keyword=N_ --keyword=C_:1c,2 --keyword=NC_:1c,2 --keyword=g_dngettext:2,3 --"
"add-comments\n```"

#. type: Plain text
#: Porting-from-autotools.md:652
#, no-wrap
msgid ""
"`Makefile.am`:\n"
"```make\n"
"%.desktop: %.desktop.in\n"
"    $(AM_V_GEN)$(MSGFMT) --desktop --template $< -d $(top_srcdir)/po -o $@\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:656
#, no-wrap
msgid ""
"%.appdata.xml: %.appdata.xml.in\n"
"    $(AM_V_GEN)$(MSGFMT) --xml --template $< -d $(top_srcdir)/po -o $@\n"
"```\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:660
msgid "`meson.build`: ```meson i18n = import('i18n')"
msgstr "`meson.build`:\n```meson\ni18n = import('i18n')"

#. type: Plain text
#: Porting-from-autotools.md:664
msgid ""
"gettext_package = 'foo' add_project_arguments('-DGETTEXT_PACKAGE=' + "
"gettext_package, language: 'c')  subdir('po')"
msgstr ""
"gettext_package = 'foo'\nadd_project_arguments('-DGETTEXT_PACKAGE=' + "
"gettext_package, language: 'c')\nsubdir('po')"

#. type: Plain text
#: Porting-from-autotools.md:673
#, no-wrap
msgid ""
"i18n.merge_file(\n"
"  input: 'foo.desktop.in',\n"
"  output: 'foo.desktop',\n"
"  type: 'desktop',\n"
"  po_dir: 'po',\n"
"  install: true,\n"
"  install_dir: join_paths(get_option('datadir'), 'applications')\n"
")\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:682
#, no-wrap
msgid ""
"i18n.merge_file(\n"
"  input: 'foo.appdata.xml.in',\n"
"  output: 'foo.appdata.xml',\n"
"  po_dir: 'po',\n"
"  install: true,\n"
"  install_dir: join_paths(get_option('datadir'), 'appdata')\n"
")\n"
"```\n"
msgstr ""

#. type: Plain text
#: Porting-from-autotools.md:686
msgid ""
"`po/meson.build`: ```meson i18n.gettext(gettext_package, preset: 'glib')  ```"
msgstr ""
"`po/meson.build`:\n```meson\ni18n.gettext(gettext_package, preset: 'glib')\n```"
