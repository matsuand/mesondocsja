# Japanese translations for PACKAGE package
# Copyright (C) 2017 Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# Automatically generated, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2018-09-01 15:59+0900\n"
"PO-Revision-Date: 2017-09-30 21:43+0900\n"
"Last-Translator: Automatically generated\n"
"Language-Team: matsuand個人翻訳\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Plain text
#: Feature-autodetection.md:1
#, no-wrap
msgid "---\n"
msgstr ""

#. type: Plain text
#: Feature-autodetection.md:4
msgid ""
"short-description: Auto-detection of features like ccache and code "
"coverage ..."
msgstr ""

#. type: Plain text
#: Feature-autodetection.md:6
msgid "# Feature autodetection"
msgstr ""

#. type: Plain text
#: Feature-autodetection.md:8
msgid ""
"Meson is designed for high productivity. It tries to do as many things "
"automatically as it possibly can."
msgstr ""

#. type: Plain text
#: Feature-autodetection.md:10
#, no-wrap
msgid ""
"CCache\n"
"--\n"
msgstr ""

#. type: Plain text
#: Feature-autodetection.md:13
msgid ""
"[CCache](https://ccache.samba.org/) is a cache system designed to make "
"compiling faster. When you run Meson for the first time for a given project, "
"it checks if CCache is installed. If it is, Meson will use it automatically."
msgstr ""

#. type: Plain text
#: Feature-autodetection.md:15
msgid ""
"If you do not wish to use CCache for some reason, just specify your compiler "
"with environment variables `CC` and/or `CXX` when first running Meson "
"(remember that once specified the compiler can not be changed). Meson will "
"then use the specified compiler without CCache."
msgstr ""

#. type: Plain text
#: Feature-autodetection.md:17
#, no-wrap
msgid ""
"Coverage\n"
"--\n"
msgstr ""

#. type: Plain text
#: Feature-autodetection.md:19
msgid ""
"When doing a code coverage build, Meson will check the existence of binaries "
"`gcovr`, `lcov` and `genhtml`. If the first one is found, it will create "
"targets called *coverage-text* and *coverage-xml*. If the latter two or a "
"new enough `gcovr` is found, it generates the target *coverage-html*. You "
"can then generate coverage reports just by calling e.g. `ninja coverage-xml`."
msgstr ""
