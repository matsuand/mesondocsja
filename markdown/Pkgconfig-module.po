# Japanese translations for PACKAGE package
# Copyright (C) 2017 Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# Automatically generated, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2018-09-01 16:24+0900\n"
"PO-Revision-Date: 2017-09-30 21:44+0900\n"
"Last-Translator: Automatically generated\n"
"Language-Team: matsuand個人翻訳\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Plain text
#: Pkgconfig-module.md:2
msgid "# Pkgconfig module"
msgstr "# Pkgconfig モジュール"

#. type: Plain text
#: Pkgconfig-module.md:5
msgid ""
"This module is a simple generator for [pkg-config](https://pkg-config."
"freedesktop.org/) files."
msgstr ""
"このモジュールは単純に [pkg-config](https://pkg-config.freedesktop.org"
"/) ファイルを生成するものです。"

#. type: Plain text
#: Pkgconfig-module.md:7
msgid "## Usage"
msgstr "## 利用方法"

#. type: Plain text
#: Pkgconfig-module.md:11
msgid ""
"To use this module, just do: **`pkg = import('pkgconfig')`**. The following "
"function will then be available as `pkg.generate()`. You can, of course, "
"replace the name `pkg` with anything else."
msgstr ""
"このモジュールを用いるには **`pkg = import('pkgconfig')`** を実行するだけで"
"す。`pkg.generate()` を用いることで、以下に示すような機能を利用することがで"
"きます。もちろん `pkg` という名前は別のものに変えてもかまいません。"

#. type: Plain text
#: Pkgconfig-module.md:13
msgid "### pkg.generate()"
msgstr ""

#. type: Plain text
#: Pkgconfig-module.md:16
msgid ""
"The generated file's properties are specified with the following keyword "
"arguments."
msgstr ""
"生成されたファイル内の各プロパティは、以下のキーワード引数により特定する"
"ことができます。"

#. type: Bullet: '- '
#: Pkgconfig-module.md:54
msgid "`description` a string describing the library"
msgstr "`description` ライブラリを説明する文字列。"

#. type: Bullet: '- '
#: Pkgconfig-module.md:54
msgid ""
"`extra_cflags` a list of extra compiler flags to be added to the `Cflags` "
"field after the header search path"
msgstr ""

#. type: Bullet: '- '
#: Pkgconfig-module.md:54
msgid ""
"`filebase`, the base name to use for the pkg-config file, as an example the "
"value of `libfoo` would produce a pkg-config file called `libfoo.pc`"
msgstr ""

#. type: Bullet: '- '
#: Pkgconfig-module.md:54
msgid ""
"`install_dir` the directory to install to, defaults to the value of option "
"`libdir` followed by `/pkgconfig`"
msgstr ""

#. type: Bullet: '- '
#: Pkgconfig-module.md:54
msgid ""
"`libraries` a list of built libraries (usually results of shared_library) "
"that the user needs to link against. Arbitraty strings can also be provided "
"and they will be added into the `Libs` field. Since 0.45.0 dependencies of "
"built libraries will be automatically added to `Libs.private` field. If a "
"dependency is provided by pkg-config then it will be added in `Requires."
"private` instead. Other type of dependency objects can also be passed and "
"will result in their `link_args` and `compile_args` to be added to `Libs` "
"and `Cflags` fields."
msgstr ""

#. type: Bullet: '- '
#: Pkgconfig-module.md:54
msgid ""
"`libraries_private` list of built libraries or strings to put in the `Libs."
"private` field. Since 0.45.0 it can also contain dependency objects, their "
"`link_args` will be added to `Libs.private`."
msgstr ""

#. type: Bullet: '- '
#: Pkgconfig-module.md:54
msgid "`name` the name of this library"
msgstr "`name` ライブラリ名。"

#. type: Bullet: '- '
#: Pkgconfig-module.md:54
msgid ""
"`subdirs` which subdirs of `include` should be added to the header search "
"path, for example if you install headers into `${PREFIX}/include/foobar-1`, "
"the correct value for this argument would be `foobar-1`"
msgstr ""

#. type: Plain text
#: Pkgconfig-module.md:54
#, no-wrap
msgid ""
"- `requires` list of strings, pkgconfig-dependencies or libraries that\n"
"   `pkgconfig.generate()` was used on to put in the `Requires` field\n"
"- `requires_private` same as `requires` but for `Requires.private` field\n"
"  field\n"
"- `url` a string with a url for the library\n"
"- `variables` a list of strings with custom variables to add to the\n"
"  generated file. The strings must be in the form `name=value` and may\n"
"  reference other pkgconfig variables,\n"
"  e.g. `datadir=${prefix}/share`. The names `prefix`, `libdir` and\n"
"  `installdir` are reserved and may not be used.\n"
"- `version` a string describing the version of this library\n"
"- `d_module_versions` a list of module version flags used when compiling\n"
"   D sources referred to by this pkg-config file\n"
msgstr ""
"- `requires` list of strings, pkgconfig-dependencies or libraries that\n"
"   `pkgconfig.generate()` was used on to put in the `Requires` field\n"
"- `requires_private` same as `requires` but for `Requires.private` field\n"
"  field\n"
"- `url` a string with a url for the library\n"
"- `variables` a list of strings with custom variables to add to the\n"
"  generated file. The strings must be in the form `name=value` and may\n"
"  reference other pkgconfig variables,\n"
"  e.g. `datadir=${prefix}/share`. The names `prefix`, `libdir` and\n"
"  `installdir` are reserved and may not be used.\n"
"- `version` ライブラリのバージョンを表わす文字列。\n"
"- `d_module_versions` a list of module version flags used when compiling\n"
"   D sources referred to by this pkg-config file\n"

#. type: Plain text
#: Pkgconfig-module.md:60
msgid ""
"Since 0.46 a `StaticLibrary` or `SharedLibrary` object can optionally be "
"passed as first positional argument. If one is provided a default value will "
"be provided for all required fields of the pc file: - `install_dir` is set "
"to `pkgconfig` folder in the same location than the provided library.  - "
"`description` is set to the project's name followed by the library's name.  "
"- `name` is set to the library's name."
msgstr ""
