# Japanese translations for PACKAGE package
# Copyright (C) 2017 Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# Automatically generated, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2017-10-24 18:52+0900\n"
"PO-Revision-Date: 2017-09-30 21:44+0900\n"
"Last-Translator: Automatically generated\n"
"Language-Team: matsuand個人翻訳\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Plain text
#: Precompiled-headers.md:1
#, no-wrap
msgid "---\n"
msgstr ""

#. type: Plain text
#: Precompiled-headers.md:4
msgid ""
"short-description: Using precompiled headers to reduce compilation time ..."
msgstr ""
"short-description: Using precompiled headers to reduce compilation time\n"
"..."

#. type: Plain text
#: Precompiled-headers.md:6
msgid "# Precompiled headers"
msgstr "# プリコンパイルヘッダー"

#. type: Plain text
#: Precompiled-headers.md:13
msgid ""
"Parsing header files of system libraries is surprisingly expensive. A "
"typical source file has less than one thousand lines of code. In contrast "
"the headers of large libraries can be tens of thousands of lines. This is "
"especially problematic with C++, where header-only libraries are common and "
"they may contain extremely complex code. This makes them slow to compile."
msgstr ""

#. type: Plain text
#: Precompiled-headers.md:19
msgid ""
"Precompiled headers are a tool to mitigate this issue. Basically what they "
"do is parse the headers and then serialize the compiler's internal state to "
"disk. The downside of precompiled headers is that they are tricky to set up. "
"Meson has native support for precompiled headers, but using them takes a "
"little work."
msgstr ""

#. type: Plain text
#: Precompiled-headers.md:23
msgid ""
"A precompiled header file is relatively simple. It is a header file that "
"contains `#include` directives for the system headers to precompile. Here is "
"a C++ example."
msgstr ""

#. type: Plain text
#: Precompiled-headers.md:29
#, no-wrap
msgid ""
"```cpp\n"
"    #include<vector>\n"
"    #include<string>\n"
"    #include<map>\n"
"```\n"
msgstr ""

#. type: Plain text
#: Precompiled-headers.md:37
msgid ""
"In Meson, precompiled header files are always per-target. That is, the given "
"precompiled header is used when compiling every single file in the target. "
"Due to limitations of the underlying compilers, this header file must not be "
"in the same subdirectory as any of the source files. It is strongly "
"recommended that you create a subdirectory called `pch` in the target "
"directory and put the header files (and nothing else) there."
msgstr ""

#. type: Plain text
#: Precompiled-headers.md:39
#, no-wrap
msgid ""
"Toggling the usage of precompiled headers\n"
"--\n"
msgstr ""

#. type: Plain text
#: Precompiled-headers.md:49
msgid ""
"If you wish to compile your project without precompiled headers, you can "
"change the value of the pch option by passing `-Db_pch=false` argument to "
"Meson at configure time or later with `meson configure`. You can also toggle "
"the use of pch in a configured build directory with the GUI tool. You don't "
"have to do any changes to the source code. Typically this is done to test "
"whether your project compiles cleanly without pch (that is, checking that "
"its #includes are in order) and working around compiler bugs."
msgstr ""

#. type: Plain text
#: Precompiled-headers.md:51
#, no-wrap
msgid ""
"Using precompiled headers with GCC and derivatives\n"
"--\n"
msgstr ""

#. type: Plain text
#: Precompiled-headers.md:56
msgid ""
"Once you have a file to precompile, you can enable the use of pch for a give "
"target with a *pch* keyword argument. As an example, here's how you would "
"use it with a C binary."
msgstr ""

#. type: Plain text
#: Precompiled-headers.md:60
msgid ""
"```meson executable('myexe', sources : sourcelist, c_pch : 'pch/myexe_pch."
"h')  ```"
msgstr ""
"```meson\n"
"executable('myexe', sources : sourcelist, c_pch : 'pch/myexe_pch.h') \n"
"```"

#. type: Plain text
#: Precompiled-headers.md:67
msgid ""
"You should note that your source files must _not_ include the file "
"`myexe_pch.h` and you must _not_ add the pch subdirectory to your search "
"path. Meson will make the compiler include the pch with compiler options. If "
"you want to disable pch (because of, say, compiler bugs), it can be done "
"entirely on the build system side with no changes to source code."
msgstr ""

#. type: Plain text
#: Precompiled-headers.md:70
msgid ""
"You can use precompiled headers on any build target. If your target has "
"multiple languages, you can specify multiple pch files like this."
msgstr ""

#. type: Plain text
#: Precompiled-headers.md:75
#, no-wrap
msgid ""
"```meson\n"
"executable('multilang', sources : srclist,\n"
"           c_pch : 'pch/c_pch.h', cpp_pch : 'pch/cpp_pch.h'])\n"
"```\n"
msgstr ""

#. type: Plain text
#: Precompiled-headers.md:77
#, no-wrap
msgid ""
"Using precompiled headers with MSVC\n"
"--\n"
msgstr ""

#. type: Plain text
#: Precompiled-headers.md:84
msgid ""
"MSVC is a bit trickier, because in addition to the header file, it also "
"requires a corresponding source file. If your header is called `foo_pch.h`, "
"the corresponding source file is usually called `foo_pch.cpp` and it resides "
"in the same `pch` subdirectory as the header. Its contents are this:"
msgstr ""

#. type: Plain text
#: Precompiled-headers.md:89
msgid ""
"```cpp #if !defined(_MSC_VER)  #error \"This file is only for use with MSVC."
"\" #endif"
msgstr ""
"```cpp\n"
"#if !defined(_MSC_VER) \n"
"#error \"This file is only for use with MSVC.\"\n"
"#endif"

#. type: Plain text
#: Precompiled-headers.md:92
msgid "#include \"foo_pch.h\" ```"
msgstr ""
"#include \"foo_pch.h\"\n"
"```"

#. type: Plain text
#: Precompiled-headers.md:94
msgid "To enable pch, simply list both files in the target definition:"
msgstr ""

#. type: Plain text
#: Precompiled-headers.md:99
#, no-wrap
msgid ""
"```meson\n"
"executable('myexe', sources : srclist,\n"
"           cpp_pch : ['pch/foo_pch.h', 'pch/foo_pch.cpp'])\n"
"```\n"
msgstr ""

#. type: Plain text
#: Precompiled-headers.md:102
msgid ""
"This form will work with both GCC and msvc, because Meson knows that GCC "
"does not need a `.cpp` file and thus just ignores it."
msgstr ""

#. type: Plain text
#: Precompiled-headers.md:105
msgid ""
"It should be noted that due to implementation details of the MSVC compiler, "
"having precompiled headers for multiple languages in the same target is not "
"guaranteed to work."
msgstr ""
